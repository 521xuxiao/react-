import React, {Component} from 'react';
import { withRouter } from 'react-router-dom'
import { Menu } from 'antd';


import './slider.scss';
const { SubMenu } = Menu;
class Slider extends Component {
    constructor(props) {
        super(props)
        this.state = {
            defaultActive: '',
            defaultSelectedKeys: ['1-1'],  // 默认高亮
            defaultOpenKeys: ['1'],   // 默认打开
            openKeys: []
        }
    }
    render() {
        return(
            <div className="slider" id="slider">
                <Menu onClick={this.handleClick.bind(this)} style={{ width: "100%" }} defaultSelectedKeys={this.state.defaultSelectedKeys} defaultOpenKeys={this.state.defaultOpenKeys} mode="inline">
                    <SubMenu key="1" title={ <span>Navigation One</span>}>
                        <Menu.Item key="1-1">Option 1</Menu.Item>
                        <Menu.Item key="1-2">Option 2</Menu.Item>
                        <Menu.Item key="1-3">Option 3</Menu.Item>
                    </SubMenu>
                    <SubMenu key="2" title="Navigation Two">
                        <Menu.Item key="2-1">Option 5</Menu.Item>
                        <Menu.Item key="2-2">Option 6</Menu.Item>
                    </SubMenu>
                </Menu>
            </div>
        )
    }
    componentDidMount () {

    }
    componentWillMount() {  // 此方法里面做的刷新页面导航栏保持高亮显示
        let items = sessionStorage.getItem("menuKey");
        if(items) {
            let str = null;
            if(items.indexOf('-') !== -1) {
                str = items.split('-')[0]
            }
            let defaultSelectedKeys = [items];
            let defaultOpenKeys = [str];
            this.setState({
                defaultSelectedKeys,
                defaultOpenKeys
            })
        }
    }

    handleClick({item, key}) {
        sessionStorage.setItem("menuKey", key);
        switch(key) {
            case '1-1':
                this.props.history.push('/app/home');
                break;
            case '1-2':
                this.props.history.push('/app/index');
                break;
            case '1-3':
                this.props.history.push('/app/bill');
                break;
            case '2-1':
                this.props.history.push('/app/collectGoods');
                break;
            case '2-2':
                this.props.history.push('/app/nowReturn');
                break;
        }
    }
}
export default withRouter(Slider);
