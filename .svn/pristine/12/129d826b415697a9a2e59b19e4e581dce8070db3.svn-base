import React, {Component} from "react"
import {Input, Select, Table, Space, Pagination, Modal, InputNumber, Button, DatePicker, Upload, message, Switch, TreeSelect} from 'antd';
import { ExclamationCircleOutlined ,UploadOutlined} from '@ant-design/icons';
import Axios from 'axios';
import 'moment/locale/zh-cn';
import moment from 'moment';
import locale from 'antd/es/date-picker/locale/zh_CN';
import "./otherWarehouseOut.scss"
const {Option} = Select;
const {Column} = Table;
const {TextArea} = Input;
const { confirm } = Modal;
const { RangePicker } = DatePicker;
class OtherWarehouseOut extends Component{
    constructor(props) {
        super(props);
        this.state = {
            startTime: '',  endTime: '',
            searchType: '',  searchTypeList: [],
            status: '',      statusList: [],
            dataSource: [],
            currentPage: 1,
            pageSize: 10,
            pageTotal: 0,
            //////////////////////////////// 模态框  ///////////////////////////////////////////
            msg: '',
            flag: 1,
            visible: false,
            salesTypeIdList: [],
            modalData: [],
            materialCodeList: []
        }
    }
    render() {
        return(
            <div className="otherWarehouseOut">
                <div className="placeSearch">
                    <span className="span1">日期</span>
                    <RangePicker onChange={(e, time)=>{
                        if(time[0]) {
                            this.setState({
                                startTime: time[0],
                                endTime: time[1]
                            })
                        }else{
                            this.setState({
                                startTime: "",
                                endTime: ""
                            })
                        }
                    }} className="input1 inputDatePicker" placeholder="" locale={locale} showTime/>
                    <span className="span1 span2">供应商</span>
                    <Select allowClear className="input1" onChange={(e)=>{this.setState({searchType: e})}}>
                        {
                            this.state.searchTypeList.map((item)=>{
                                return(
                                    <Option value={item.value} key={item.value}>{item.label}</Option>
                                )
                            })
                        }
                    </Select>

                    <span className="span1 span2">状态</span>
                    <Select allowClear className="input1" onChange={(e)=>{this.setState({status: e})}}>
                        {
                            this.state.statusList.map((item)=>{
                                return(
                                    <Option value={item.value} key={item.value}>{item.label}</Option>
                                )
                            })
                        }
                    </Select>
                    <button className="searchs" onClick={this.searchMethods.bind(this)}>查询</button>
                </div>
                <div className="bg">
                    <button className="searchs" onClick={this.add.bind(this)}>新增</button>
                    <button className="searchs searchs1" onClick={this.donload.bind(this)}>导出</button>
                </div>
                <div className="placeTable">
                    <Table pagination={false} dataSource={this.state.dataSource} locale={{emptyText: '暂无数据'}}>
                        <Column title="序号" align="center" key="index" dataIndex="index" width="100px" render={(text, record, index)=>(
                            <span>{(this.state.currentPage-1)*this.state.pageSize+index+1}</span>
                        )}/>
                        <Column title="时间" dataIndex="deliveryDate" key="deliveryDate" align="center"/>
                        <Column title="编号" dataIndex="clientName" key="clientName" align="center"/>
                        <Column title="供应商" dataIndex="clientName" key="clientName" align="center"/>
                        <Column title="数量" dataIndex="totalPrice" key="totalPrice" align="center"/>
                        <Column title="仓库" dataIndex="totalPrice" key="totalPrice" align="center"/>
                        <Column title="金额" dataIndex="code" key="code" align="center"/>
                        <Column title="制单" dataIndex="empno" key="empno" align="center"/>
                        <Column title="审核" dataIndex="auditStatus" key="auditStatus" align="center" render={(text)=>(
                            <span>{text==0?"未通过":"已通过"}</span>
                        )}/>
                        <Column title="操作" align="center" key="records" dataIndex="records"
                            render={(text, record) => (
                                <Space size="large">
                                    <span key={"changes"} onClick={this.changes.bind(this, record)} className="changes">编辑</span>
                                    <span key={"deletes"} onClick={this.deletes.bind(this, record)} className="deletes">删除</span>
                                    <span key={"details"} onClick={this.check.bind(this, record)} className="details span11">审核</span>
                                    <span key={"details"} onClick={this.notCheck.bind(this, record)} className="details span11">反审核</span>
                                </Space>
                            )}
                        />
                    </Table>
                </div>
                <div className="placePagination">
                    <Pagination showTotal={()=>`共 ${this.state.pageTotal} 条`} current={this.state.currentPage} onChange={this.changePages.bind(this)} pageSize={this.state.pageSize} total={this.state.pageTotal} showSizeChanger={false}/>
                </div>

                <Modal title={this.state.msg} width="80%" footer={null} getContainer={false} closable={false}  visible={this.state.visible} centered={true}>
                    <div className="modal1">
                        <ul className="salesInvoiceUl">
                            <li className="salesInvoiceLi">
                                <span className="salesInvoiceSpan">编号</span>
                                <div className="salesInvoiceDiv1">
                                    <Input allowClear value={this.state.code} disabled/>
                                </div>
                            </li>
                            <li className="salesInvoiceLi">
                                <span className="salesInvoiceSpan">领料部门</span>
                                <div className="salesInvoiceDiv1">
                                    <Select className="input3" style={{width: '100%'}} value={this.state.salesTypeId} onChange={(e)=>{this.setState({salesTypeId: e})}}>
                                        {this.state.salesTypeIdList.map((item)=>{
                                            return(
                                                <Option value={item.valueId} key={item.valueId}>{item.value}</Option>
                                            )
                                        })}
                                    </Select>
                                </div>
                            </li>
                            <li className="salesInvoiceLi">
                                <span className="salesInvoiceSpan">日期</span>
                                <div className="salesInvoiceDiv1">
                                    <DatePicker style={{width: '100%'}} onChange={(e, time)=>{
                                        this.setState({deliveryDate: time})
                                    }}
                                    value={this.state.deliveryDate==undefined || this.state.deliveryDate=='' ?"":moment(this.state.deliveryDate, 'YYYY-MM-DD')} locale={locale}
                                    disabled={this.state.flag==3?true:false}/>
                                </div>
                            </li>
                        </ul>
                        <ul className="salesInvoiceUl salesInvoiceUl1">
                            <li className="salesInvoiceLi">
                                <span className="salesInvoiceSpan">客户</span>
                                <div className="salesInvoiceDiv1">
                                    <Select className="input3" style={{width: '100%'}} value={this.state.salesTypeId} onChange={(e)=>{this.setState({salesTypeId: e})}}>
                                        {this.state.salesTypeIdList.map((item)=>{
                                            return(
                                                <Option value={item.valueId} key={item.valueId}>{item.value}</Option>
                                            )
                                        })}
                                    </Select>
                                </div>
                            </li>
                            <li className="salesInvoiceLi">
                                <span className="salesInvoiceSpan">供应商</span>
                                <div className="salesInvoiceDiv1">
                                    <Input allowClear value={this.state.code}/>
                                </div>
                            </li>
                            <li className="salesInvoiceLi">
                                <span className="salesInvoiceSpan">用途</span>
                                <div className="salesInvoiceDiv1">
                                    <Input allowClear value={this.state.code}/>
                                </div>
                            </li>
                        </ul>
                        <ul className="salesInvoiceUl salesInvoiceUl1">
                            <li className="salesInvoiceLi">
                                <span className="salesInvoiceSpan">发货仓库</span>
                                <div className="salesInvoiceDiv1">
                                    <Input allowClear value={this.state.code}/>
                                </div>
                            </li>
                        </ul>

                        <div className="placeChangeTable">
                            <Table pagination={false} dataSource={this.state.modalData} locale={{emptyText: '暂无数据'}} scroll={{x: 2000}}>
                                <Column title="" align="center" key="records" dataIndex="records" width={120} fixed='left'
                                    render={(text, record) => (
                                        <>
                                            <span className="span_img1 span_img" onClick={this.addModalData.bind(this)}>+</span>
                                            <span className="span_img2 span_img" onClick={this.subtraction.bind(this, record)}>-</span>
                                        </>
                                    )}
                                />
                                <Column title="产品编码" dataIndex="materialCode" key="materialCode" align="center" width={300} render={(text, record)=>(
                                    <>
                                        <Select style={{width: '100%', textAlign: "left"}} value={text}
                                                onChange={(e)=>{
                                                    this.state.modalData.forEach((item)=>{
                                                        if(item.id == record.id) {
                                                            item.materialCode = e;
                                                            if(record.materialCode != undefined && record.materialCode.indexOf(",")!=-1) {
                                                                item.materialName = item.materialCode.split(",")[1];
                                                                item.measurement = item.materialCode.split(",")[2];
                                                                item.stock = item.materialCode.split(",")[3];
                                                            }
                                                        }
                                                    })
                                                    this.setState({
                                                        modalData: this.state.modalData
                                                    })
                                                }}>
                                            {this.state.materialCodeList.map((item)=>{
                                                return(
                                                    <Option value={","+item.materialName+","+item.measurement+","+item.stock+","+item.materialCode+","+item.baseInfoType} key={item.id}>{item.materialCode+"  "+item.materialName}</Option>
                                                )
                                            })}
                                        </Select>
                                    </>
                                )}/>
                                <Column title="产品名称" dataIndex="materialName" key="materialName" align="center" width={100}/>
                                <Column width={200} title="周转物类型" dataIndex="packagingLayout" key="packagingLayout" align="center" render={(text, record)=>(
                                    <>
                                        <Select style={{width: '100%', textAlign: "left"}} value={text} onChange={(e)=>{
                                            this.state.modalData.forEach((item)=>{
                                                if(item.id == record.id) {
                                                    item.packagingLayout = e;
                                                }
                                            })
                                            this.setState({
                                                modalData: this.state.modalData
                                            })
                                        }}>
                                            {this.state.materialCodeList.map((item)=>{
                                                return(
                                                    <Option value={item.materialCode} key={item.id}>{item.materialName}</Option>
                                                )
                                            })}
                                        </Select>
                                    </>
                                )}/>
                                <Column width={200} title="包装版面" dataIndex="packagingLayout" key="packagingLayout" align="center" render={(text, record)=>(
                                    <>
                                        <Select style={{width: '100%', textAlign: "left"}} value={text} onChange={(e)=>{
                                            this.state.modalData.forEach((item)=>{
                                                if(item.id == record.id) {
                                                    item.packagingLayout = e;
                                                }
                                            })
                                            this.setState({
                                                modalData: this.state.modalData
                                            })
                                        }}>
                                            {this.state.materialCodeList.map((item)=>{
                                                return(
                                                    <Option value={item.materialCode} key={item.id}>{item.materialName}</Option>
                                                )
                                            })}
                                        </Select>
                                    </>
                                )}/>
                                <Column width={200} title="桶数" dataIndex="packagingLayout" key="packagingLayout" align="center" render={(text, record)=>(
                                    <>
                                        <InputNumber value={text} onChange={(e)=>{
                                            this.state.modalData.forEach((item)=>{
                                                if(item.id == record.id) {
                                                    item.note = e;
                                                }
                                            })
                                            this.setState({modalData: this.state.modalData})
                                        }} />
                                    </>
                                )}/>
                                <Column width={200} title="箱数" dataIndex="packagingLayout" key="packagingLayout" align="center" render={(text, record)=>(
                                    <>
                                        <InputNumber value={text} onChange={(e)=>{
                                            this.state.modalData.forEach((item)=>{
                                                if(item.id == record.id) {
                                                    item.note = e;
                                                }
                                            })
                                            this.setState({modalData: this.state.modalData})
                                        }} />
                                    </>
                                )}/>
                                <Column title="单位" dataIndex="measurement" key="measurement" align="center" width={100}/>
                                <Column width={200} title="数量" dataIndex="packagingLayout" key="packagingLayout" align="center" render={(text, record)=>(
                                    <>
                                        <InputNumber value={text} onChange={(e)=>{
                                            this.state.modalData.forEach((item)=>{
                                                if(item.id == record.id) {
                                                    item.note = e;
                                                }
                                            })
                                            this.setState({modalData: this.state.modalData})
                                        }} />
                                    </>
                                )}/>
                                <Column width={200} title="单价" dataIndex="packagingLayout" key="packagingLayout" align="center" render={(text, record)=>(
                                    <>
                                        <InputNumber value={text} onChange={(e)=>{
                                            this.state.modalData.forEach((item)=>{
                                                if(item.id == record.id) {
                                                    item.note = e;
                                                }
                                            })
                                            this.setState({modalData: this.state.modalData})
                                        }} />
                                    </>
                                )}/>
                                <Column title="金额" dataIndex="stock" key="stock" align="center" width={200}/>
                                <Column width={200} title="发货仓库" dataIndex="packagingLayout" key="packagingLayout" align="center" render={(text, record)=>(
                                    <>
                                        <Select style={{width: '100%', textAlign: "left"}} value={text} onChange={(e)=>{
                                            this.state.modalData.forEach((item)=>{
                                                if(item.id == record.id) {
                                                    item.packagingLayout = e;
                                                }
                                            })
                                            this.setState({
                                                modalData: this.state.modalData
                                            })
                                        }}>
                                            {this.state.materialCodeList.map((item)=>{
                                                return(
                                                    <Option value={item.materialCode} key={item.id}>{item.materialName}</Option>
                                                )
                                            })}
                                        </Select>
                                    </>
                                )}/>
                                <Column title="库存" dataIndex="stock" key="stock" align="center" width={200}/>
                                <Column title="备注" dataIndex="note" key="note" align="center" width={200} render={(text, record)=>(
                                    <>
                                        <Input value={text} onChange={(e)=>{
                                            this.state.modalData.forEach((item)=>{
                                                if(item.id == record.id) {
                                                    item.note = e.target.value;
                                                }
                                            })
                                            this.setState({modalData: this.state.modalData})
                                        }} />
                                    </>
                                )}/>
                            </Table>
                        </div>

                        <ul className="salesInvoiceUl salesInvoiceUl1">
                            <li className="salesInvoiceLi">
                                <span className="salesInvoiceSpan">制单</span>
                                <div className="salesInvoiceDiv1">
                                    <Input allowClear value={this.state.createName} disabled/>
                                </div>
                            </li>
                            <li className="salesInvoiceLi">
                                <span className="salesInvoiceSpan">审核</span>
                                <div className="salesInvoiceDiv1">
                                    <Input allowClear value={this.state.check} disabled/>
                                </div>
                            </li>
                            <li className="salesInvoiceLi">
                                <span className="salesInvoiceSpan">审核日期</span>
                                <div className="salesInvoiceDiv1">
                                    <Input allowClear value={this.state.checkTime} disabled/>
                                </div>
                            </li>
                        </ul>
                        <ul className="salesInvoiceUl salesInvoiceUl1">
                            <li className="salesInvoiceLi">
                                <span className="salesInvoiceSpan">发货</span>
                                <div className="salesInvoiceDiv1">
                                    <Select className="input3" style={{width: '100%'}} value={this.state.salesTypeId} onChange={(e)=>{this.setState({salesTypeId: e})}}>
                                        {this.state.salesTypeIdList.map((item)=>{
                                            return(
                                                <Option value={item.valueId} key={item.valueId}>{item.value}</Option>
                                            )
                                        })}
                                    </Select>
                                </div>
                            </li>
                            <li className="salesInvoiceLi">
                                <span className="salesInvoiceSpan">领料</span>
                                <div className="salesInvoiceDiv1">
                                    <Select className="input3" style={{width: '100%'}} value={this.state.salesTypeId} onChange={(e)=>{this.setState({salesTypeId: e})}}>
                                        {this.state.salesTypeIdList.map((item)=>{
                                            return(
                                                <Option value={item.valueId} key={item.valueId}>{item.value}</Option>
                                            )
                                        })}
                                    </Select>
                                </div>
                            </li>
                            <li className="salesInvoiceLi">
                                <span className="salesInvoiceSpan">记账</span>
                                <div className="salesInvoiceDiv1">
                                    <Select className="input3" disabled style={{width: '100%'}} value={this.state.salesTypeId} onChange={(e)=>{this.setState({salesTypeId: e})}}>
                                        {this.state.salesTypeIdList.map((item)=>{
                                            return(
                                                <Option value={item.valueId} key={item.valueId}>{item.value}</Option>
                                            )
                                        })}
                                    </Select>
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div className="div4">
                        <li className="li4">
                            <Button className="btn4" type="danger" onClick={()=>{this.setState({visible: false})}}>取消</Button>
                        </li>
                        <li className="li4">
                            <Button className="btn4" type="primary" onClick={this.handleOk.bind(this)}>确定</Button>
                        </li>
                    </div>
                </Modal>
            </div>
        )
    }
    initData(currentPage) {
        let params = {
            currentPage,
            pageSize: this.state.pageSize,
            startTime: this.state.startTime,
            endTime: this.state.endTime,
            searchType: this.state.searchType,
            status: this.state.status
        }
        Axios.post("/self/....", params).then((res)=>{
            if(res.data.success) {

            }else{

            }
        })
    }
    searchMethods() {
        this.initData(this.state.currentPage);
    }
    add() {
        this.setState({
            visible: true,
            flag: 1,
            msg: '新增'
        })
    }
    donload() {

    }
    changes(row) {

    }
    deletes(row) {

    }
    check(row) {

    }
    notCheck(row) {

    }
    changePages(val) {
        this.setState({
            currentPage: val
        })
        this.initData(val);
    }
    handleOk() {

    }
    addModalData() {

    }
    subtraction(row) {

    }
}
export default OtherWarehouseOut;