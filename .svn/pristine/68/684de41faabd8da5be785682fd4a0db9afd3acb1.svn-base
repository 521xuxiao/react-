import React ,{Component} from 'react';
import {Input, Select, DatePicker, Table, Pagination, Space, Modal, Button, InputNumber} from 'antd';
import Axios from 'axios';
import 'moment/locale/zh-cn';
import moment from 'moment';
import locale from 'antd/es/date-picker/locale/zh_CN';
import './finishedProductsStorage.scss';
const {Option} = Select;
const {RangePicker } =  DatePicker;
const {Column} =  Table;
class FinishedProductsStorage extends Component{
    constructor(props) {
        super(props);
        this.state = {
            sheetName: '',  startTime: '',   endTime: '',
            dataSource: [],
            currentPage: 1, pageSize: 10, pageTotal: 0,
            ///////////////////////////////////////////
            dataTimes: '',
            deliveryDepartment: '',    deliveryDepartmentList: [],
            status: '',                statusList: [],
            /////////////////////////////////////  modal  /////////////////////////////////////////
            msg: '', flag: 1, visible: false,
            code: '',
            deliveryDate: '',
            deliveryUnitList: [],   deliveryUnit: '',
            originalsingleTypeList: [], originalsingleType: '',
            modalData: [],
            materialCodeList: [],
            packagingLayoutList: [],
            deliveryEmpnoList: []
        }
    }
    render() {
        return(
            <div id="finishedProductsStorage">
                <div className="finishedProductsStorage">
                    <div className="placeSearch">
                        <span className="span1">日期</span>
                        <DatePicker onChange={(e, time)=>{
                            this.setState({dataTimes: time})
                        }}
                        value={this.state.dataTimes==undefined || this.state.dataTimes=='' ?"":moment(this.state.dataTimes, 'YYYY-MM-DD')} locale={locale}
                        className="input1"/>

                        <span className="span1 span2">交货部门</span>
                        <Select allowClear className="input1" onChange={(e)=>{this.setState({deliveryDepartment: e})}}>
                            {
                                this.state.deliveryDepartmentList.map((item)=>{
                                    return(
                                        <Option value={item.value} key={item.value}>{item.label}</Option>
                                    )
                                })
                            }
                        </Select>

                        <span className="span1 span2">状态</span>
                        <Select allowClear className="input1" onChange={(e)=>{this.setState({status: e})}}>
                            {
                                this.state.statusList.map((item)=>{
                                    return(
                                        <Option value={item.value} key={item.value}>{item.label}</Option>
                                    )
                                })
                            }
                        </Select>

                        <button className="searchs" onClick={this.searchMethods.bind(this)}>查询</button>
                    </div>
                    <div className="bg">
                        <button className="searchs" onClick={this.add.bind(this)}>新增</button>
                        <button className="searchs searchs1" onClick={this.donload.bind(this)}>导出</button>
                        <button className="searchs" onClick={this.allAdd.bind(this)}>生成</button>
                    </div>
                    <div className="placeTable">
                        <Table pagination={false} dataSource={this.state.dataSource} locale={{emptyText: '暂无数据'}}>
                            <Column title="序号" align="center" key="index" dataIndex="index" width="100px" render={(text, record, index)=>(
                                <span>{(this.state.currentPage-1)*this.state.pageSize+index+1}</span>
                            )}/>
                            <Column title="时间" dataIndex="sheetName" key="sheetName" align="center"/>
                            <Column title="编号" dataIndex="qualityCheckSheetCode" key="qualityCheckSheetCode" align="center"/>
                            <Column title="交货部门" dataIndex="workroomName" key="workroomName" align="center" />
                            <Column title="收货仓库" dataIndex="inboundNum" key="inboundNum" align="center"/>
                            <Column title="实收数量" dataIndex="modifiedTime" key="modifiedTime" align="center"/>
                            <Column title="制单" dataIndex="modifiedTime" key="modifiedTime" align="center"/>
                            <Column title="审核" dataIndex="modifiedTime" key="modifiedTime" align="center"/>
                            <Column title="操作" align="center" key="records" dataIndex="records"
                                render={(text, record) => (
                                    <Space size="large">
                                        <span key={"changes"} onClick={this.changes.bind(this, record)} className="changes">编辑</span>
                                        <span key={"deletes"} onClick={this.deletes.bind(this, record)} className="deletes">删除</span>
                                        {/*<span key={"details"} onClick={this.details.bind(this, record)} className="details span11">详情</span>*/}
                                    </Space>
                                )}
                            />
                        </Table>
                    </div>
                    <div className="placePagination">
                        <Pagination showTotal={()=>`共 ${this.state.pageTotal} 条`} current={this.state.currentPage} onChange={this.changePages.bind(this)} pageSize={this.state.pageSize} total={this.state.pageTotal} showSizeChanger={false}/>
                    </div>

                    <Modal title={this.state.msg} width="80%" footer={null} getContainer={false} closable={false}  visible={this.state.visible} centered={true}>
                        <div className="modal1">
                            <ul className="salesInvoiceUl">
                                <li className="salesInvoiceLi">
                                    <span className="salesInvoiceSpan">编码</span>
                                    <div className="salesInvoiceDiv1">
                                        <Input allowClear value={this.state.code} disabled/>
                                    </div>
                                </li>
                                <li className="salesInvoiceLi">
                                    <span className="salesInvoiceSpan">日期</span>
                                    <div className="salesInvoiceDiv1">
                                        <DatePicker style={{width: '100%'}} onChange={(e, time)=>{
                                            this.setState({deliveryDate: time})
                                        }}
                                        value={this.state.deliveryDate==undefined || this.state.deliveryDate=='' ?"":moment(this.state.deliveryDate, 'YYYY-MM-DD')} locale={locale}
                                        disabled={this.state.flag==3?true:false}/>
                                    </div>
                                </li>
                                <li className="salesInvoiceLi">
                                    <span className="salesInvoiceSpan">交货单位</span>
                                    <div className="salesInvoiceDiv1">
                                        <Select className="input3" style={{width: '100%'}} value={this.state.deliveryUnit} onChange={(e)=>{this.setState({deliveryUnit: e})}}>
                                            {this.state.deliveryUnitList.map((item)=>{
                                                return(
                                                    <Option value={item.valueId} key={item.valueId}>{item.value}</Option>
                                                )
                                            })}
                                        </Select>
                                    </div>
                                </li>
                            </ul>
                            <ul className="salesInvoiceUl salesInvoiceUl1">
                                <li className="salesInvoiceLi">
                                    <span className="salesInvoiceSpan">收货仓库</span>
                                    <div className="salesInvoiceDiv1">
                                        <Input allowClear value={this.state.batchNumber} onChange={(e)=>{
                                            this.setState({batchNumber: e.target.value})
                                        }}/>
                                    </div>
                                </li>
                                <li className="salesInvoiceLi">
                                    <span className="salesInvoiceSpan">果园号</span>
                                    <div className="salesInvoiceDiv1">
                                        <Input allowClear value={this.state.batchNumber} onChange={(e)=>{
                                            this.setState({batchNumber: e.target.value})
                                        }}/>
                                    </div>
                                </li>
                                <li className="salesInvoiceLi">
                                    <span className="salesInvoiceSpan">批次号</span>
                                    <div className="salesInvoiceDiv1">
                                        <Input allowClear value={this.state.batchNumber} onChange={(e)=>{
                                            this.setState({batchNumber: e.target.value})
                                        }}/>
                                    </div>
                                </li>
                            </ul>
                            <ul className="salesInvoiceUl salesInvoiceUl1">
                                <li className="salesInvoiceLi">
                                    <span className="salesInvoiceSpan">源单类型</span>
                                    <div className="salesInvoiceDiv1">
                                        <Select className="input3" style={{width: '100%'}} value={this.state.originalsingleType} onChange={(e)=>{this.setState({originalsingleType: e})}}>
                                            {this.state.originalsingleTypeList.map((item)=>{
                                                return(
                                                    <Option value={item.valueId} key={item.valueId}>{item.value}</Option>
                                                )
                                            })}
                                        </Select>
                                    </div>
                                </li>
                            </ul>

                            <div className="placeChangeTable">
                                <Table pagination={false} dataSource={this.state.modalData} locale={{emptyText: '暂无数据'}} scroll={{x: 1500}}>
                                    <Column title="" align="center" key="records" dataIndex="records" width={120} fixed='left'
                                            render={(text, record) => (
                                                <>
                                                    <span className="span_img1 span_img" onClick={this.addModalData.bind(this)}>+</span>
                                                    <span className="span_img2 span_img" onClick={this.subtraction.bind(this, record)}>-</span>
                                                </>
                                            )}
                                    />
                                    <Column title="产品编码" dataIndex="materialCode" key="materialCode" align="center" width={300} render={(text, record)=>(
                                        <>
                                            <Select style={{width: '100%', textAlign: "left"}} value={text}
                                                    onChange={(e)=>{
                                                        this.state.modalData.forEach((item)=>{
                                                            if(item.id == record.id) {
                                                                item.materialCode = e;
                                                                if(record.materialCode != undefined && record.materialCode.indexOf(",")!=-1) {
                                                                    item.materialName = item.materialCode.split(",")[1];
                                                                    item.measurement = item.materialCode.split(",")[2];
                                                                    item.stock = item.materialCode.split(",")[3];
                                                                }
                                                            }
                                                        })
                                                        this.setState({
                                                            modalData: this.state.modalData
                                                        })
                                                    }}>
                                                {this.state.materialCodeList.map((item)=>{
                                                    return(
                                                        <Option value={","+item.materialName+","+item.measurement+","+item.stock+","+item.materialCode+","+item.baseInfoType} key={item.id}>{item.materialCode+"  "+item.materialName}</Option>
                                                    )
                                                })}
                                            </Select>
                                        </>
                                    )}/>
                                    <Column title="产品名称" dataIndex="materialName" key="materialName" align="center" width={100}/>
                                    <Column width={200} title="包装版面" dataIndex="packagingLayout" key="packagingLayout" align="center" render={(text, record)=>(
                                        <>
                                            <Select style={{width: '100%', textAlign: "left"}} value={text} onChange={(e)=>{
                                                this.state.modalData.forEach((item)=>{
                                                    if(item.id == record.id) {
                                                        item.packagingLayout = e;
                                                    }
                                                })
                                                this.setState({
                                                    modalData: this.state.modalData
                                                })
                                            }}>
                                                {this.state.packagingLayoutList.map((item)=>{
                                                    return(
                                                        <Option value={item.materialCode} key={item.id}>{item.materialName}</Option>
                                                    )
                                                })}
                                            </Select>
                                        </>
                                    )}/>
                                    <Column title="箱数" dataIndex="boxNum" key="boxNum" align="center" width={200} render={(text, record)=>(
                                        <>
                                            <InputNumber value={text} onChange={(e)=>{
                                                this.state.modalData.forEach((item)=>{
                                                    if(item.id == record.id) {
                                                        item.boxNum = e;
                                                    }
                                                })
                                                this.setState({modalData: this.state.modalData})
                                            }} />
                                        </>
                                    )}/>

                                    <Column title="桶数" dataIndex="bucketNum" key="bucketNum" align="center" width={200} render={(text, record)=>(
                                        <>
                                            <InputNumber value={text} onChange={(e)=>{
                                                this.state.modalData.forEach((item)=>{
                                                    if(item.id == record.id) {
                                                        item.bucketNum = e;
                                                    }
                                                })
                                                this.setState({modalData: this.state.modalData})
                                            }} />
                                        </>
                                    )}/>
                                    <Column title="单位净重" dataIndex="number" key="number" align="center" width={200} render={(text, record)=>(
                                        <>
                                            <InputNumber value={text} onChange={(e)=>{
                                                this.state.modalData.forEach((item)=>{
                                                    if(item.id == record.id) {
                                                        item.number = e;
                                                    }
                                                })
                                                this.setState({modalData: this.state.modalData})
                                            }} />
                                        </>
                                    )}/>
                                    <Column title="单位" dataIndex="measurement" key="measurement" align="center" width={100}/>
                                    <Column title="实收数量" dataIndex="number" key="number" align="center" width={200} render={(text, record)=>(
                                        <>
                                            <InputNumber value={text} onChange={(e)=>{
                                                this.state.modalData.forEach((item)=>{
                                                    if(item.id == record.id) {
                                                        item.number = e;
                                                    }
                                                })
                                                this.setState({modalData: this.state.modalData})
                                            }} />
                                        </>
                                    )}/>
                                    <Column title="单价" dataIndex="stock" key="stock" align="center" width={200}/>
                                    <Column title="金额" dataIndex="stock" key="stock" align="center" width={200}/>
                                    <Column title="收货仓库" dataIndex="number" key="number" align="center" width={200} render={(text, record)=>(
                                        <>
                                            <Input value={text} onChange={(e)=>{
                                                this.state.modalData.forEach((item)=>{
                                                    if(item.id == record.id) {
                                                        item.number = e.target.value;
                                                    }
                                                })
                                                this.setState({modalData: this.state.modalData})
                                            }} />
                                        </>
                                    )}/>
                                    <Column title="库存" dataIndex="stock" key="stock" align="center" width={200}/>
                                    <Column title="备注" dataIndex="note" key="note" align="center" width={200} render={(text, record)=>(
                                        <>
                                            <Input value={text} onChange={(e)=>{
                                                this.state.modalData.forEach((item)=>{
                                                    if(item.id == record.id) {
                                                        item.note = e.target.value;
                                                    }
                                                })
                                                this.setState({modalData: this.state.modalData})
                                            }} />
                                        </>
                                    )}/>
                                    <Column title="源单单号" dataIndex="sourceSheetCode" key="sourceSheetCode" align="center" width={200} render={(text, record)=>(
                                        <>
                                            <Input value={text} onChange={(e)=>{
                                                this.state.modalData.forEach((item)=>{
                                                    if(item.id == record.id) {
                                                        item.sourceSheetCode = e.target.value;
                                                    }
                                                })
                                                this.setState({modalData: this.state.modalData})
                                            }} />
                                        </>
                                    )}/>
                                </Table>
                            </div>
                            <ul className="salesInvoiceUl salesInvoiceUl1">
                                <li className="salesInvoiceLi">
                                    <span className="salesInvoiceSpan">制单</span>
                                    <div className="salesInvoiceDiv1">
                                        <Input allowClear value={this.state.createName} disabled/>
                                    </div>
                                </li>
                                <li className="salesInvoiceLi">
                                    <span className="salesInvoiceSpan">审核</span>
                                    <div className="salesInvoiceDiv1">
                                        <Input allowClear value={this.state.check} disabled/>
                                    </div>
                                </li>
                                <li className="salesInvoiceLi">
                                    <span className="salesInvoiceSpan">审核日期</span>
                                    <div className="salesInvoiceDiv1">
                                        <Input allowClear value={this.state.checkTime} disabled/>
                                    </div>
                                </li>
                            </ul>
                            <ul className="salesInvoiceUl salesInvoiceUl1">
                                <li className="salesInvoiceLi">
                                    <span className="salesInvoiceSpan">验收</span>
                                    <div className="salesInvoiceDiv1">
                                        <Select className="input3" style={{width: '100%'}} value={this.state.keeperEmpno} onChange={(e)=>{this.setState({keeperEmpno: e})}}>
                                            {this.state.deliveryEmpnoList.map((item)=>{
                                                return(
                                                    <Option value={item.empno} key={item.id}>{item.realname}</Option>
                                                )
                                            })}
                                        </Select>
                                    </div>
                                </li>
                                <li className="salesInvoiceLi">
                                    <span className="salesInvoiceSpan">保管</span>
                                    <div className="salesInvoiceDiv1">
                                        <Select className="input3" style={{width: '100%'}} value={this.state.keeperEmpno} onChange={(e)=>{this.setState({keeperEmpno: e})}}>
                                            {this.state.deliveryEmpnoList.map((item)=>{
                                                return(
                                                    <Option value={item.empno} key={item.id}>{item.realname}</Option>
                                                )
                                            })}
                                        </Select>
                                    </div>
                                </li>
                            </ul>
                        </div>
                        <div className="div4">
                            <li className="li4">
                                <Button className="btn4" type="danger" onClick={()=>{this.setState({visible: false})}}>取消</Button>
                            </li>
                            <li className="li4">
                                <Button className="btn4" type="primary" onClick={this.handleOk.bind(this)}>确定</Button>
                            </li>
                        </div>
                    </Modal>
                </div>
            </div>
        )
    }
    initData(currentPage) {
        let params = {
            currentPage,
            pageSize: this.state.pageSize,
            sheetCode: this.state.code,
            sheetName: this.state.sheetName,
            startTime: this.state.startTime,
            endTime: this.state.endTime
        };
        Axios.post('/self/erp/ProductWarehouse/queryProductInboundSheet', params).then((res)=>{
            if(res.data.success) {
                this.setState({
                    dataSource: res.data.data.productInboundSheets,
                    pageTotal: res.data.data.num
                })
            }else{
                this.setState({
                    dataSource: [],
                    pageTotal: 0
                })
            }
        })
    }
    add() {
        this.setState({
            visible: true,
            flag: 1,
            msg: '新增'
        })
    }
    changes(row) {

    }
    deletes(row) {

    }
    donload() {

    }
    allAdd() {

    }
    searchMethods() {
        this.initData(1);
        this.setState({
            currentPage: 1
        })
    }
    changePages(val) {
        this.initData(val);
        this.setState({
            currentPage: val
        })
    }
    handleOk() {

    }
    componentDidMount() {
        this.initData(this.state.currentPage);
    }

    addModalData() {

    }
    subtraction(row) {

    }
}
export default FinishedProductsStorage;