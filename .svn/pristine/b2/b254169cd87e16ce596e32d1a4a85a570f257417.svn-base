import React, {Component} from 'react';
import {Table, Space, message, Modal, Input, Button} from 'antd';
import { ExclamationCircleOutlined } from '@ant-design/icons';
import Axios from 'axios';
import './branch.scss'
const {Column} =  Table;
const { confirm } = Modal;
class Branch extends Component{
    constructor(props) {
        super(props);
        this.state = {
            dataSource: [],
            currentPage: 1,
            pageSize: 10,
            pageTotle: 0,
            visible: false,
            departmentValue: '',
            msg: '',
            flag: 0,
            selfId: ''
        }
    }
    render() {
        return(
            <div id="branch">
                <div className="Branch">
                    <div className={"placeTable"} >
                        <Table pagination={false} dataSource={this.state.dataSource}>
                            {/*<Column title="序号" align="center" width="100px" key="index" render={(text, record, index)=>(*/}
                                {/*<span key={index}>{index + (this.state.currentPage-1)*this.state.pageSize+1}</span>*/}
                            {/*)}/>*/}
                            <Column title="部门名称" dataIndex="deptName" key="deptName" align="center"/>
                            <Column title="操作" align="center" width="200px" key="cord"
                                    render={(text, record, index) => (
                                        <Space size="large" key={index+"1"}>
                                            <span key={"span1"} onClick={this.changes.bind(this, record)} className="changes">编辑</span>
                                            <span key={"span2"} onClick={this.deletes.bind(this, record)} className="deletes">删除</span>
                                            <span key={index+'100'} onClick={this.add.bind(this, record)} style={record.children && record.children.length ? {display: "block",
                                                color: '#27BA62', userSelect: "none", cursor: "pointer"} : {display: "none"}}>新增</span>
                                        </Space>
                                    )}
                            />
                        </Table>
                    </div>
                    <Modal title={this.state.msg} footer={null} closable={false} getContainer={false} visible={this.state.visible} centered={true}>
                        <div className="modal1">
                            <span className={"span1"}>部门名称</span>
                            <Input allowClear className="input" onChange={(e)=>{this.setState({departmentValue: e.target.value})}} value={this.state.departmentValue}/>
                        </div>
                        <div style={{textAlign: "center", paddingTop: '20px'}}>
                            <Button type="danger" style={{marginRight: '10%'}} onClick={()=>{this.setState({visible: false})}}>取消</Button>
                            <Button type="primary" style={{marginLeft: '10%'}} onClick={this.handleOk.bind(this)}>确定</Button>
                        </div>
                    </Modal>
                </div>
            </div>
        )
    }
    add(row) {
        this.setState({
            visible: true,
            msg: "新增",
            id: row.parentId,
            flag: 1,
            departmentValue: ''
        })
    }
    changes(row) {
        this.setState({
            visible: true,
            msg: "修改",
            id: row.parentId,
            selfId: row.deptId,
            flag: 0,
            departmentValue: row.deptName
        })
    }
    deletes(row) {
        let that = this;
        confirm({
            title: '你确定要删除吗?',
            icon: <ExclamationCircleOutlined />,
            content: '',
            onOk() {
                let params = {
                    deptId: row.deptId
                };
                Axios.post('/self/erp/dept/deleteDept', params).then((res)=>{
                    if(res.data.success) {
                        message.success("删除成功");
                        that.initData();
                    }else{
                        message.warning(res.data.message);
                    }
                })
            },
            onCancel() {},
        });
    }
    initData() {
        Axios.post('/self/erp/dept/queryDept').then((res)=>{
            // console.log(res.data);
            if(res.data.success) {
                res.data.data.deptList.forEach((item)=>{
                    item.key = item.id;
                });
                this.setState({
                    dataSource: res.data.data.deptList
                });
            }else{
                message.warning(res.data.message);
            }
        })
    }
    handleOk() {
        let params = {
            name: this.state.departmentValue,
            parentId: this.state.id
        };
        if(this.state.flag == 1) {  // 新增
            Axios.post('/self/erp/dept/addDept', params).then((res)=>{
                // console.log(res.data);
                if(res.data.success) {
                    message.success("新增成功");
                    this.initData();
                    this.setState({
                        visible: false
                    })
                }else{
                    message.warning(res.data.message);
                }
            })
        }else{  // 修改
            params.id = this.state.selfId;
            Axios.post('/self/erp/dept/updateDept', params).then((res)=>{
                // console.log(res.data);
                if(res.data.success) {
                    message.success("修改成功");
                    this.initData();
                    this.setState({
                        visible: false
                    })
                }else{
                    message.warning(res.data.message);
                }
            })
        }
    }
    componentDidMount() {
        this.initData();
    }
}
export default Branch;
